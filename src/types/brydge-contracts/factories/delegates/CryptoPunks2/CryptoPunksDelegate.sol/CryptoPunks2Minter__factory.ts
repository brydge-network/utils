/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CryptoPunks2Minter,
  CryptoPunks2MinterInterface,
} from "../../../../delegates/CryptoPunks2/CryptoPunksDelegate.sol/CryptoPunks2Minter";

const _abi = [
  {
    inputs: [],
    name: "PUNKS",
    outputs: [
      {
        internalType: "contract IPunks2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "handleERC721Transfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610896806100206000396000f3fe6080604052600436106100345760003560e01c8063150b7a02146100395780632bf0c7561461007657806330da111a14610092575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610481565b6100bd565b60405161006d9190610544565b60405180910390f35b610090600480360381019061008b919061055f565b6100d2565b005b34801561009e57600080fd5b506100a7610366565b6040516100b4919061061e565b60405180910390f35b600063150b7a0260e01b905095945050505050565b600073c02d332abc7f9e755e2b1eb56f6ae21a7da4b7ad73ffffffffffffffffffffffffffffffffffffffff16348585604051610110929190610678565b60006040518083038185875af1925050503d806000811461014d576040519150601f19603f3d011682016040523d82523d6000602084013e610152565b606091505b5050905080610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d906106ee565b60405180910390fd5b600073c02d332abc7f9e755e2b1eb56f6ae21a7da4b7ad73ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e5919061071d565b602060405180830381865afa158015610202573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610226919061074d565b905060005b8181101561035e57600073c02d332abc7f9e755e2b1eb56f6ae21a7da4b7ad73ffffffffffffffffffffffffffffffffffffffff16632f745c5930846040518363ffffffff1660e01b8152600401610284929190610789565b602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c5919061074d565b905073c02d332abc7f9e755e2b1eb56f6ae21a7da4b7ad73ffffffffffffffffffffffffffffffffffffffff166323b872dd3087846040518463ffffffff1660e01b8152600401610318939291906107b2565b600060405180830381600087803b15801561033257600080fd5b505af1158015610346573d6000803e3d6000fd5b5050505050808061035690610818565b91505061022b565b505050505050565b73c02d332abc7f9e755e2b1eb56f6ae21a7da4b7ad81565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103b382610388565b9050919050565b6103c3816103a8565b81146103ce57600080fd5b50565b6000813590506103e0816103ba565b92915050565b6000819050919050565b6103f9816103e6565b811461040457600080fd5b50565b600081359050610416816103f0565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104415761044061041c565b5b8235905067ffffffffffffffff81111561045e5761045d610421565b5b60208301915083600182028301111561047a57610479610426565b5b9250929050565b60008060008060006080868803121561049d5761049c61037e565b5b60006104ab888289016103d1565b95505060206104bc888289016103d1565b94505060406104cd88828901610407565b935050606086013567ffffffffffffffff8111156104ee576104ed610383565b5b6104fa8882890161042b565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61053e81610509565b82525050565b60006020820190506105596000830184610535565b92915050565b6000806000604084860312156105785761057761037e565b5b600084013567ffffffffffffffff81111561059657610595610383565b5b6105a28682870161042b565b935093505060206105b5868287016103d1565b9150509250925092565b6000819050919050565b60006105e46105df6105da84610388565b6105bf565b610388565b9050919050565b60006105f6826105c9565b9050919050565b6000610608826105eb565b9050919050565b610618816105fd565b82525050565b6000602082019050610633600083018461060f565b92915050565b600081905092915050565b82818337600083830152505050565b600061065f8385610639565b935061066c838584610644565b82840190509392505050565b6000610685828486610653565b91508190509392505050565b600082825260208201905092915050565b7f4d696e74206661696c6564000000000000000000000000000000000000000000600082015250565b60006106d8600b83610691565b91506106e3826106a2565b602082019050919050565b60006020820190508181036000830152610707816106cb565b9050919050565b610717816103a8565b82525050565b6000602082019050610732600083018461070e565b92915050565b600081519050610747816103f0565b92915050565b6000602082840312156107635761076261037e565b5b600061077184828501610738565b91505092915050565b610783816103e6565b82525050565b600060408201905061079e600083018561070e565b6107ab602083018461077a565b9392505050565b60006060820190506107c7600083018661070e565b6107d4602083018561070e565b6107e1604083018461077a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610823826103e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610855576108546107e9565b5b60018201905091905056fea26469706673582212204e028a5c056c1d1ae240172df1c6a5967d681dd3ec57aba272e4c75317111fcc64736f6c634300080e0033";

type CryptoPunks2MinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptoPunks2MinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptoPunks2Minter__factory extends ContractFactory {
  constructor(...args: CryptoPunks2MinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptoPunks2Minter> {
    return super.deploy(overrides || {}) as Promise<CryptoPunks2Minter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CryptoPunks2Minter {
    return super.attach(address) as CryptoPunks2Minter;
  }
  override connect(signer: Signer): CryptoPunks2Minter__factory {
    return super.connect(signer) as CryptoPunks2Minter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptoPunks2MinterInterface {
    return new utils.Interface(_abi) as CryptoPunks2MinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptoPunks2Minter {
    return new Contract(address, _abi, signerOrProvider) as CryptoPunks2Minter;
  }
}
