/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MultichainRouter,
  MultichainRouterInterface,
} from "../../L2/MultichainRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_portal",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "Portal",
    outputs: [
      {
        internalType: "contract IMultichainPortal",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapArguments",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "_to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "_calldata",
            type: "bytes",
          },
        ],
        internalType: "struct Types.ICall[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "swapERC20AndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountUSDC",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapArguments",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "dstChainId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "srcPoolId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "dstPoolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "dstGasForCall",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dstNativeAmount",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "dstNativeAddr",
                type: "bytes",
              },
            ],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "lzTxObj",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultichainPortal.StargateArgs",
        name: "stargateArgs",
        type: "tuple",
      },
    ],
    name: "swapERC20AndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapArguments",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "_to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "_value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "_calldata",
            type: "bytes",
          },
        ],
        internalType: "struct Types.ICall[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "swapNativeAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountUSDC",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lzFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapRouter",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapArguments",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "dstChainId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "srcPoolId",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "dstPoolId",
            type: "uint16",
          },
          {
            internalType: "uint256",
            name: "minAmountOut",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "dstGasForCall",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "dstNativeAmount",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "dstNativeAddr",
                type: "bytes",
              },
            ],
            internalType: "struct IStargateRouter.lzTxObj",
            name: "lzTxObj",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct IMultichainPortal.StargateArgs",
        name: "stargateArgs",
        type: "tuple",
      },
    ],
    name: "swapNativeAndSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200279438038062002794833981810160405281019062000037919062000232565b60008060006101000a81548160ff0219169083151502179055506200007162000065620000fb60201b60201c565b6200010360201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000279565b600033905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fa82620001cd565b9050919050565b6200020c81620001ed565b81146200021857600080fd5b50565b6000815190506200022c8162000201565b92915050565b600080604083850312156200024c576200024b620001c8565b5b60006200025c858286016200021b565b92505060206200026f858286016200021b565b9150509250929050565b61250b80620002896000396000f3fe6080604052600436106100ab5760003560e01c80637e5de430116100645780637e5de430146101825780638456cb59146101ab5780638da5cb5b146101c2578063d57acafd146101ed578063e37f311b14610209578063f2fde38b14610225576100b2565b806320130335146100b75780633e413bee146100e25780633f4ba83a1461010d5780635c975abb146101245780636dce41c51461014f578063715018a61461016b576100b2565b366100b257005b600080fd5b3480156100c357600080fd5b506100cc61024e565b6040516100d9919061102e565b60405180910390f35b3480156100ee57600080fd5b506100f7610274565b604051610104919061106a565b60405180910390f35b34801561011957600080fd5b5061012261029a565b005b34801561013057600080fd5b506101396102ac565b60405161014691906110a0565b60405180910390f35b61016960048036038101906101649190611487565b6102c2565b005b34801561017757600080fd5b5061018061058d565b005b34801561018e57600080fd5b506101a960048036038101906101a491906115bb565b6105a1565b005b3480156101b757600080fd5b506101c06107f0565b005b3480156101ce57600080fd5b506101d7610802565b6040516101e4919061106a565b60405180910390f35b6102076004803603810190610202919061169d565b61082b565b005b610223600480360381019061021e919061177b565b6108d9565b005b34801561023157600080fd5b5061024c60048036038101906102479190611837565b610984565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102a2610a07565b6102aa610a85565b565b60008060009054906101000a900460ff16905090565b60003411610305576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fc906118e7565b60405180910390fd5b60008811610348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033f90611979565b60405180910390fd5b600085905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016103aa919061106a565b602060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb91906119ae565b905061043c33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c8573ffffffffffffffffffffffffffffffffffffffff16610ae7909392919063ffffffff16565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401610498919061106a565b602060405180830381865afa1580156104b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d991906119ae565b6104e39190611a0a565b9950600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636dce41c5348c8c338c8c8c8c8c6040518a63ffffffff1660e01b815260040161054f989796959493929190611c33565b6000604051808303818588803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b505050505050505050505050505050565b610595610a07565b61059f6000610b70565b565b6105a9610c35565b600089905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b815260040161060b919061106a565b602060405180830381865afa158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c91906119ae565b905061069d33600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b8573ffffffffffffffffffffffffffffffffffffffff16610ae7909392919063ffffffff16565b808273ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b81526004016106f9919061106a565b602060405180830381865afa158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a91906119ae565b6107449190611a0a565b9850600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637e5de4308c8c8c338c8c8c8c8c6040518a63ffffffff1660e01b81526004016107b199989796959493929190611ec1565b600060405180830381600087803b1580156107cb57600080fd5b505af11580156107df573d6000803e3d6000fd5b505050505050505050505050505050565b6107f8610a07565b610800610c7f565b565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610833610c35565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d57acafd348a8a8a338a8a8a8a6040518a63ffffffff1660e01b815260040161089d989796959493929190611f42565b6000604051808303818588803b1580156108b657600080fd5b505af11580156108ca573d6000803e3d6000fd5b50505050505050505050505050565b6108e1610c35565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e37f311b34898989898989896040518963ffffffff1660e01b81526004016109499796959493929190611fc1565b6000604051808303818588803b15801561096257600080fd5b505af1158015610976573d6000803e3d6000fd5b505050505050505050505050565b61098c610a07565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f290612098565b60405180910390fd5b610a0481610b70565b50565b610a0f610ce1565b73ffffffffffffffffffffffffffffffffffffffff16610a2d610802565b73ffffffffffffffffffffffffffffffffffffffff1614610a83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7a90612104565b60405180910390fd5b565b610a8d610ce9565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610ad0610ce1565b604051610add919061106a565b60405180910390a1565b610b6a846323b872dd60e01b858585604051602401610b0893929190612124565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d32565b50505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610c3d6102ac565b15610c7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c74906121a7565b60405180910390fd5b565b610c87610c35565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cca610ce1565b604051610cd7919061106a565b60405180910390a1565b600033905090565b610cf16102ac565b610d30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2790612213565b60405180910390fd5b565b6000610d94826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610df99092919063ffffffff16565b9050600081511115610df45780806020019051810190610db4919061225f565b610df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dea906122fe565b60405180910390fd5b5b505050565b6060610e088484600085610e11565b90509392505050565b606082471015610e56576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4d90612390565b60405180910390fd5b610e5f85610f25565b610e9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e95906123fc565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610ec79190612458565b60006040518083038185875af1925050503d8060008114610f04576040519150601f19603f3d011682016040523d82523d6000602084013e610f09565b606091505b5091509150610f19828286610f48565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315610f5857829050610fa8565b600083511115610f6b5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9f91906124b3565b60405180910390fd5b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ff4610fef610fea84610faf565b610fcf565b610faf565b9050919050565b600061100682610fd9565b9050919050565b600061101882610ffb565b9050919050565b6110288161100d565b82525050565b6000602082019050611043600083018461101f565b92915050565b600061105482610faf565b9050919050565b61106481611049565b82525050565b600060208201905061107f600083018461105b565b92915050565b60008115159050919050565b61109a81611085565b82525050565b60006020820190506110b56000830184611091565b92915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6110e2816110cf565b81146110ed57600080fd5b50565b6000813590506110ff816110d9565b92915050565b61110e81611049565b811461111957600080fd5b50565b60008135905061112b81611105565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261115657611155611131565b5b8235905067ffffffffffffffff81111561117357611172611136565b5b60208301915083600182028301111561118f5761118e61113b565b5b9250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111e48261119b565b810181811067ffffffffffffffff82111715611203576112026111ac565b5b80604052505050565b60006112166110bb565b905061122282826111db565b919050565b600080fd5b600061ffff82169050919050565b6112438161122c565b811461124e57600080fd5b50565b6000813590506112608161123a565b92915050565b600080fd5b600067ffffffffffffffff821115611286576112856111ac565b5b61128f8261119b565b9050602081019050919050565b82818337600083830152505050565b60006112be6112b98461126b565b61120c565b9050828152602081018484840111156112da576112d9611266565b5b6112e584828561129c565b509392505050565b600082601f83011261130257611301611131565b5b81356113128482602086016112ab565b91505092915050565b60006060828403121561133157611330611196565b5b61133b606061120c565b9050600061134b848285016110f0565b600083015250602061135f848285016110f0565b602083015250604082013567ffffffffffffffff81111561138357611382611227565b5b61138f848285016112ed565b60408301525092915050565b600060e082840312156113b1576113b0611196565b5b6113bb60e061120c565b905060006113cb84828501611251565b60008301525060206113df84828501611251565b60208301525060406113f384828501611251565b6040830152506060611407848285016110f0565b606083015250608082013567ffffffffffffffff81111561142b5761142a611227565b5b6114378482850161131b565b60808301525060a061144b8482850161111c565b60a08301525060c082013567ffffffffffffffff81111561146f5761146e611227565b5b61147b848285016112ed565b60c08301525092915050565b60008060008060008060008060e0898b0312156114a7576114a66110c5565b5b60006114b58b828c016110f0565b98505060206114c68b828c016110f0565b97505060406114d78b828c0161111c565b96505060606114e88b828c0161111c565b95505060806114f98b828c0161111c565b94505060a089013567ffffffffffffffff81111561151a576115196110ca565b5b6115268b828c01611140565b935093505060c089013567ffffffffffffffff811115611549576115486110ca565b5b6115558b828c0161139b565b9150509295985092959890939650565b60008083601f84011261157b5761157a611131565b5b8235905067ffffffffffffffff81111561159857611597611136565b5b6020830191508360208202830111156115b4576115b361113b565b5b9250929050565b600080600080600080600080600060e08a8c0312156115dd576115dc6110c5565b5b60006115eb8c828d0161111c565b99505060206115fc8c828d0161111c565b985050604061160d8c828d016110f0565b975050606061161e8c828d0161111c565b965050608061162f8c828d0161111c565b95505060a08a013567ffffffffffffffff8111156116505761164f6110ca565b5b61165c8c828d01611140565b945094505060c08a013567ffffffffffffffff81111561167f5761167e6110ca565b5b61168b8c828d01611565565b92509250509295985092959850929598565b60008060008060008060008060e0898b0312156116bd576116bc6110c5565b5b60006116cb8b828c016110f0565b98505060206116dc8b828c016110f0565b97505060406116ed8b828c016110f0565b96505060606116fe8b828c0161111c565b955050608061170f8b828c0161111c565b94505060a089013567ffffffffffffffff8111156117305761172f6110ca565b5b61173c8b828c01611140565b935093505060c089013567ffffffffffffffff81111561175f5761175e6110ca565b5b61176b8b828c0161139b565b9150509295985092959890939650565b600080600080600080600060a0888a03121561179a576117996110c5565b5b60006117a88a828b0161111c565b97505060206117b98a828b0161111c565b96505060406117ca8a828b0161111c565b955050606088013567ffffffffffffffff8111156117eb576117ea6110ca565b5b6117f78a828b01611140565b9450945050608088013567ffffffffffffffff81111561181a576118196110ca565b5b6118268a828b01611565565b925092505092959891949750929550565b60006020828403121561184d5761184c6110c5565b5b600061185b8482850161111c565b91505092915050565b600082825260208201905092915050565b7f73746172676174652072657175697265732061206d73672e76616c756520746f60008201527f207061792063726f7373636861696e206d657373616765000000000000000000602082015250565b60006118d1603783611864565b91506118dc82611875565b604082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f6572726f723a2073776170282920726571756972657320616d6f756e74496e2060008201527f3e20300000000000000000000000000000000000000000000000000000000000602082015250565b6000611963602383611864565b915061196e82611907565b604082019050919050565b6000602082019050818103600083015261199281611956565b9050919050565b6000815190506119a8816110d9565b92915050565b6000602082840312156119c4576119c36110c5565b5b60006119d284828501611999565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a15826110cf565b9150611a20836110cf565b925082821015611a3357611a326119db565b5b828203905092915050565b611a47816110cf565b82525050565b600082825260208201905092915050565b6000611a6a8385611a4d565b9350611a7783858461129c565b611a808361119b565b840190509392505050565b611a948161122c565b82525050565b611aa3816110cf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ae3578082015181840152602081019050611ac8565b83811115611af2576000848401525b50505050565b6000611b0382611aa9565b611b0d8185611ab4565b9350611b1d818560208601611ac5565b611b268161119b565b840191505092915050565b6000606083016000830151611b496000860182611a9a565b506020830151611b5c6020860182611a9a565b5060408301518482036040860152611b748282611af8565b9150508091505092915050565b611b8a81611049565b82525050565b600060e083016000830151611ba86000860182611a8b565b506020830151611bbb6020860182611a8b565b506040830151611bce6040860182611a8b565b506060830151611be16060860182611a9a565b5060808301518482036080860152611bf98282611b31565b91505060a0830151611c0e60a0860182611b81565b5060c083015184820360c0860152611c268282611af8565b9150508091505092915050565b600060e082019050611c48600083018b611a3e565b611c55602083018a611a3e565b611c62604083018961105b565b611c6f606083018861105b565b611c7c608083018761105b565b81810360a0830152611c8f818587611a5e565b905081810360c0830152611ca38184611b90565b90509998505050505050505050565b600082825260208201905092915050565b6000819050919050565b6000611cdc602084018461111c565b905092915050565b6000611cf360208401846110f0565b905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611d2757611d26611d05565b5b83810192508235915060208301925067ffffffffffffffff821115611d4f57611d4e611cfb565b5b600182023603831315611d6557611d64611d00565b5b509250929050565b6000611d798385611ab4565b9350611d8683858461129c565b611d8f8361119b565b840190509392505050565b600060608301611dad6000840184611ccd565b611dba6000860182611b81565b50611dc86020840184611ce4565b611dd56020860182611a9a565b50611de36040840184611d0a565b8583036040870152611df6838284611d6d565b925050508091505092915050565b6000611e108383611d9a565b905092915050565b600082356001606003833603038112611e3457611e33611d05565b5b82810191505092915050565b6000602082019050919050565b6000611e598385611cb2565b935083602084028501611e6b84611cc3565b8060005b87811015611eaf578484038952611e868284611e18565b611e908582611e04565b9450611e9b83611e40565b925060208a01995050600181019050611e6f565b50829750879450505050509392505050565b600060e082019050611ed6600083018c61105b565b611ee3602083018b61105b565b611ef0604083018a611a3e565b611efd606083018961105b565b611f0a608083018861105b565b81810360a0830152611f1d818688611a5e565b905081810360c0830152611f32818486611e4d565b90509a9950505050505050505050565b600060e082019050611f57600083018b611a3e565b611f64602083018a611a3e565b611f716040830189611a3e565b611f7e606083018861105b565b611f8b608083018761105b565b81810360a0830152611f9e818587611a5e565b905081810360c0830152611fb28184611b90565b90509998505050505050505050565b600060a082019050611fd6600083018a61105b565b611fe3602083018961105b565b611ff0604083018861105b565b8181036060830152612003818688611a5e565b90508181036080830152612018818486611e4d565b905098975050505050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612082602683611864565b915061208d82612026565b604082019050919050565b600060208201905081810360008301526120b181612075565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006120ee602083611864565b91506120f9826120b8565b602082019050919050565b6000602082019050818103600083015261211d816120e1565b9050919050565b6000606082019050612139600083018661105b565b612146602083018561105b565b6121536040830184611a3e565b949350505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612191601083611864565b915061219c8261215b565b602082019050919050565b600060208201905081810360008301526121c081612184565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006121fd601483611864565b9150612208826121c7565b602082019050919050565b6000602082019050818103600083015261222c816121f0565b9050919050565b61223c81611085565b811461224757600080fd5b50565b60008151905061225981612233565b92915050565b600060208284031215612275576122746110c5565b5b60006122838482850161224a565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006122e8602a83611864565b91506122f38261228c565b604082019050919050565b60006020820190508181036000830152612317816122db565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b600061237a602683611864565b91506123858261231e565b604082019050919050565b600060208201905081810360008301526123a98161236d565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006123e6601d83611864565b91506123f1826123b0565b602082019050919050565b60006020820190508181036000830152612415816123d9565b9050919050565b600081905092915050565b600061243282611aa9565b61243c818561241c565b935061244c818560208601611ac5565b80840191505092915050565b60006124648284612427565b915081905092915050565b600081519050919050565b60006124858261246f565b61248f8185611864565b935061249f818560208601611ac5565b6124a88161119b565b840191505092915050565b600060208201905081810360008301526124cd818461247a565b90509291505056fea26469706673582212200429251f19f3a7b59f87a553f376ee8870a08ccc2074f96fc64fe6ca44f1442b64736f6c634300080e0033";

type MultichainRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultichainRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultichainRouter__factory extends ContractFactory {
  constructor(...args: MultichainRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _portal: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultichainRouter> {
    return super.deploy(
      _portal,
      _usdc,
      overrides || {}
    ) as Promise<MultichainRouter>;
  }
  override getDeployTransaction(
    _portal: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_portal, _usdc, overrides || {});
  }
  override attach(address: string): MultichainRouter {
    return super.attach(address) as MultichainRouter;
  }
  override connect(signer: Signer): MultichainRouter__factory {
    return super.connect(signer) as MultichainRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultichainRouterInterface {
    return new utils.Interface(_abi) as MultichainRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultichainRouter {
    return new Contract(address, _abi, signerOrProvider) as MultichainRouter;
  }
}
